TODO
1. Different types of IPC mechanisms:
2. What are necessary conditions which can lead to a deadlock situation in a system?
3. What are real-time systems?
4. What is time- sharing system?
5. Synchronization mechanisms inside Linux kernel
6. Race condition and deadlock
7. atomic operations
8. Semaphores
9. spin-lock , in single processer?
10. Mutex and Semaphore
11. Threads and process
    11.1. Process vs thread ? when to use which ?
12. Multutasking and multithreading
13. Scheduling mechanism and types
14. client and server socket init
15. when to use message queues and socket
16. can we use pipe on different machine
17. in which IPC shared memory be used?
18. For communication between threads why we should use IPC, instead of global variables?
19. What are differences between process vs thread? How to decide using process or thread? Any tradeoff? Give me an example?
20. What are differences between semaphore vs mutex? Protect sharing resources? Signaling and synchronization?
21. What is dead-lock? How to avoid it?
22. difference between poll and select.
23. What are spin locks, are they better then mutex ?
24. What are the differences between spinlock and mutex?



